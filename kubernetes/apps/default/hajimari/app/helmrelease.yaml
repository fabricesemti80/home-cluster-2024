---
# Defines that this is a Helm Release custom resource
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: hajimari           # Name of the HelmRelease
  namespace: default       # Namespace where the application will be deployed
spec:
  interval: 30m           # How often Flux should check for updates
  chart:
    spec:
      chart: hajimari     # The name of the Helm chart to use
      version: 2.0.2      # Specific version of the chart to deploy
      sourceRef:
        kind: HelmRepository    # References a HelmRepository resource
        name: hajimari          # Name of the HelmRepository
        namespace: flux-system   # Namespace where the HelmRepository is located
  install:
    remediation:
      retries: 3         # Number of install retries if failed
  upgrade:
    cleanupOnFail: true  # Clean up resources if upgrade fails
    remediation:
      retries: 3         # Number of upgrade retries if failed
  values:
    controller:
      strategy: RollingUpdate    # How to update pods during deployment
      annotations:
        reloader.stakater.com/auto: "true"    # Auto reload on config changes

    persistence:
      config:
        enabled: true                         # Enable persistent storage
        existingClaim: hajimari-config        # Use existing PVC

    hajimari:
      name: "Fabrice"
      title: Apps

      alwaysTargetBlank: true

      showAppUrls: false
      showBookmarkGroups: true
      showGlobalBookmarks: true
      defaultSearchProvider: Google

      searchProviders:
        - name: Google
          token: g
          icon: simple-icons:google
          searchUrl: https://www.google.com/search?q={query}
          url: https://www.google.com

      defaultEnable: true

      customApps:
        - group: server
          apps:
            - name: PVE-Cluster
              url: 'https://10.0.40.10:8006'
              icon: 'mdi:server'
              info: 'This is the Proxmox Cluster'
        - group: network
          apps:
            - name: unifi-controlller
              icon: mdi:router-network
              url: "https://unifi.ui.com/consoles/D8B37045EAC900000000077FBBDD0000000007DC745C00000000645EEBC7:1521887693/network/default/dashboard"

      globalBookmarks:
        - group: Kubernetes
          bookmarks:
            - name: fabricesemti80/home-cluster-2024
              url: 'https://github.com/fabricesemti80/home-cluster-2024'
            - name: k8s-at-home-search
              url: 'https://whazor.github.io/k8s-at-home-search'
            - name: HajimariDocumentation
              url: 'https://hajimari.io'
        - group: Communication
          bookmarks:
            - name: Discord
              url: 'https://discord.com'
            - name: Gmail
              url: 'https://gmail.com'
        - group: AI
          bookmarks:
            - name: ChatGPT
              url: 'https://chatgpt.com'
            - name: Claude
              url: 'https://claude.ai/new'
        - group: Development
          bookmarks:
            - name: Dev
              url: 'https://dev.to'
            - name: Medium
              url: 'https://medium.com'
        - group: Entertainment
          bookmarks:
            - name: YoutubeMusic
              url: 'https://www.youtube.com/feed/playlists'

      namespaceSelector:
        matchNames:
          - default
          - media

    ingress:
      main:
        enabled: true                         # Enable ingress for external access
        ingressClassName: external            # Use external ingress controller
        annotations:                          # Ingress annotations for additional functionality
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Alternative to Homepage
          gethomepage.dev/group: Operations
          gethomepage.dev/icon: hajimari.png
          gethomepage.dev/name: Toboshii

        hosts:                                # Ingress host configuration
          - host: &host "hajimari.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix

    resources:                    # Define resource requests and limits
      requests:
        cpu: 100m                # Minimum CPU required
        memory: 128Mi            # Minimum memory required
      limits:
        memory: 256Mi            # Maximum memory allowed

    serviceMonitor:              # Prometheus ServiceMonitor configuration
      main:
        enabled: true           # Enable Prometheus monitoring
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m        # Scrape interval
            scrapeTimeout: 10s  # Maximum time for each scrape

    securityContext:             # Container security settings
      allowPrivilegeEscalation: false    # Prevent privilege escalation
      readOnlyRootFilesystem: true       # Make root filesystem read-only
      capabilities:
        drop: ["ALL"]                    # Drop all Linux capabilities

    podSecurityContext:          # Pod-level security settings
      runAsNonRoot: true        # Run as non-root user
      runAsUser: 65534          # Specific user ID to run as
      runAsGroup: 65534         # Specific group ID to run as
      fsGroup: 65534            # File system group ID
      seccompProfile:
        type: RuntimeDefault    # Use default seccomp profile
